<?xml version="1.0" encoding="UTF-8" ?>
<frameworks>
	
	<framework>
		<name>base</name>
		<static>1</static>
		<root>/%%LC_NAME%%/Sources.inc</root>
		<umbrella>%%NAME%%.h</umbrella>
		<external_macros>EXTERN, extern</external_macros>
		<inline_macros>inline, static inline, static __inline__, __inline__</inline_macros>
		<ignore_types>
			IBOutlet, IBAction, extern, static, inline,
			MAC_OS_X_VERSION_\w+, AVAILABLE_\w+_VERSION_\w+, DEPRECATED_IN_\w+,
			UNAVAILABLE_ATTRIBUTE, DEPRECATED_ATTRIBUTE,
		</ignore_types>
		<uses>CTypes</uses>
		<include_imported_frameworks>1</include_imported_frameworks>
		
		<!--	replacement patterns for defines -->
		<define_replacements>
			<define>
				<pattern>/CFSTR\(\s*"(.*)"\s*\)/i</pattern>
				<replacement>'$1'</replacement>
			</define>
		</define_replacements>
			
		<!-- these types by default are implicit pointers and will not be suffixed when referenced using * -->
		<implicit_pointers>idPtr</implicit_pointers>
				
		<replace_types>
			
			<value>void=pointer</value>
			
			<!-- basic c types -->
			<value>/^bool$/=cbool</value>
			<value>/^BOOL$/=boolean</value>
			<value>long=clong</value>
			<value>signed long=clong</value>
			<value>unsigned long=culong</value>
			<value>short=cshort</value>
			<value>signed short=cshort</value>
			<value>unsigned short=cushort</value>
			<value>long long=clonglong</value>
			<value>signed long long=culonglong</value>
			<value>unsigned long long=culonglong</value>
			<value>unsigned char=char</value>
			<value>signed char=char</value>
			<value>int=cint</value>
			<value>long int=clong</value>
			<value>short int=cshort</value>
			<value>signed int=cint</value>
			<value>unsigned int=cuint</value>
			<value>signed=cint</value>
			<value>unsigned=cuint</value>
			
			<value>float=single</value>
			
			<!-- library types -->
			<value>uint=cuint</value>
			<value>sint=cint</value>
			<value>uint8_t=cuint8</value>
			<value>int32_t=cint32</value>
			<value>int64_t=cint64</value>
			<value>uint32_t=cuint32</value>
			<value>uint16_t=cuint16</value>
			<value>uintptr_t=culong</value>
			<value>intptr_t=clong</value>
			<value>uint64_t=cuint64</value>
			<value>int8_t=cint8</value>
			<value>int16_t=cint16</value>
			
			<!-- objective-c runtime types -->
			<value>class=pobjc_class</value>
			
			<!-- other -->
			<value>IBAction=void</value>
			<value>FILE=pointer</value>
			
		</replace_types>
		
		<!-- types which have declared pointer equivalents -->
		<pointer_types>
			
			<!-- c-types -->
			<value>void=pointer</value>
			<value>boolean=pboolean</value>
			<value>clong=pclong</value>
			<value>cshort=pcshort</value>
			<value>cint=pcint</value>
			<value>cuint=pcuint</value>
			<value>culong=pculong</value>
			<value>cushort=pcushort</value>
			<value>char=PChar</value>
			<value>clonglong=pclonglong</value>
			<value>culonglong=pculonglong</value>
			<value>cint8=pbyte</value>
			<value>cuint8=pbyte</value>
			<value>cint16=pcint16</value>
			<value>cuint16=pcuint16</value>
			<value>cint16=pcint16</value>
			<value>cuint16=pcuint16</value>
			<value>cint32=pcint32</value>
			<value>cuint32=pcuint32</value>
			<value>cint64=pcint64</value>
			<value>cuint64=pcuint64</value>
			<value>single=psingle</value>
			<value>double=pdouble</value>
			
			<!-- pointers to pointers -->
			<value>pointer=ppointer</value>
			<value>pchar=ppchar</value>
		</pointer_types>
		
		<!-- null defined or invalid macros defined in low-level headers-->
		<remove_macros>
			<value>/__attribute__\s*\(\((.*)\)\)/i</value>
			<value>/IBOutlet/i</value>
			<value>/__unsafe_unretained/i</value>
			<value>/__unused/i</value>
		</remove_macros>
				
		<availability_macros>
			<macro>
				<pattern>/AVAILABLE_\w+_VERSION_(\d+)_(\d+)_AND_LATER\b/i</pattern>
				<replacement>{ available in $1.$2 and later }</replacement>
			</macro>
			<macro>
				<pattern>/DEPRECATED_IN_\w+_VERSION_(\d+)_(\d+)_AND_LATER\b/i</pattern>
				<replacement>deprecated 'in $1.$2 and later';</replacement>
			</macro>
			<macro>
				<pattern>/AVAILABLE_\w+_VERSION_(\d+)_(\d+)_AND_LATER\b/i</pattern>
				<replacement>{ available in $1.$2 and later }</replacement>
			</macro>
			<macro>
				<pattern>/AVAILABLE_\w+_VERSION_(\d+)_(\d+)_AND_LATER_BUT_DEPRECATED_IN_\w+_VERSION_(\d+)_(\d+)\b/i</pattern>
				<replacement>deprecated 'available in $1.$2 and later but deprecated in $3.$4';</replacement>
			</macro>
			<macro>
				<pattern>/AVAILABLE_\w+_VERSION_(\d+)_(\d+)_AND_LATER_BUT_DEPRECATED\b/i</pattern>
				<replacement>deprecated 'available in $1.$2 and later but deprecated';</replacement>
			</macro>
			<macro>
				<pattern>/\s*[_]*\w+_AVAILABLE_BUT_DEPRECATED\s*\((.*?)\)/is</pattern>
				<replacement>deprecated 'in $1';</replacement>
			</macro>
			<macro>
				<pattern>/\s*[_]*\w+_AVAILABLE_STARTING\s*\((.*?)\)/is</pattern>
				<replacement>{ available starting in $1 }</replacement>
			</macro>
			<macro>
				<pattern>/\s*[_]*\w+_AVAILABLE(_\w+)*\s*\((.*?)\)/is</pattern>
				<replacement>{ available in $2 }</replacement>
			</macro>
			<macro>
				<pattern>/\s*[_]*\w+_DEPRECATED(_\w+)*\s*\((.*?)\)/is</pattern>
				<replacement>deprecated 'in $2';</replacement>
			</macro>
			<macro>
				<pattern>/(NS|CF)+_DEPRECATED[^(]*\(([^;]*)\)\s*/is</pattern>
				<replacement>deprecated '$2';</replacement>
			</macro>
			<macro>
				<pattern>/(NS|CF)+_AVAILABLE[^(]*\(([^;]*)\)\s*/is</pattern>
				<replacement>{ available in $2 }</replacement>
			</macro>
			<macro>
				<pattern>/(NS|CF)+_UNAVAILABLE[^(]*\(([^;]*)\)\s*/is</pattern>
				<replacement>{ unavailable in $2 }</replacement>
			</macro>
		</availability_macros>
		
		<replacement_patterns>
			<!-- NS_ENUM macro from NSObjCRuntime.h starting in the 10.8 SDK -->
			<pattern>
				<pattern>/(NS|CF)+_(ENUM|OPTIONS)\((.*),\s*(.*)\)/i</pattern>
				<replacement>$3 $4; enum</replacement>
			</pattern>
		</replacement_patterns>
		
		
		<!--
		<skip_block>
			<block>
				<start></start>
				<end></end>
			</block>
		</skip_block>
		-->
		
		<!--
		<ignore_lines>
			<line></line>
		</ignore_lines>
		-->
		
	</framework>
	
	<framework>
		<parent>base</parent>
		<name>universal</name>
	</framework>
	
	<framework>
		<parent>universal</parent>
		<name>carbon_base</name>
		<static>1</static>
		<external_macros>%%ABBRV_NAME%%_OBSOLETE, %%UC_NAME%%_OBSOLETE</external_macros>
		<ignore_types>%%ABBRV_NAME%%_OBSOLETE, %%UC_NAME%%_OBSOLETE, TRUE, FALSE, NULL</ignore_types>

		<replacement_patterns>
			<!-- Calling conventions from CarbonCore/ConditionalMacros.h -->
			<pattern>
				<pattern>/CALLBACK_API(_C|_STDCALL|_C_STDCALL)*\s*\(\s*(\w+)\s*,\s*(\w+)\s*\)/i</pattern>
				<replacement>$2 (* $3)</replacement>
			</pattern>
			<pattern>
				<pattern>/STACK_UPP_TYPE\s*\((.*?)\)/i</pattern>
				<replacement>$1</replacement>
			</pattern>
			<pattern>
				<pattern>/(EXTERN|DEFINE)+_API(_C|_STDCALL|_C_STDCALL)*\s*\((.*?)\)/i</pattern>
				<replacement>$3</replacement>
			</pattern>
			<!-- From CFPlugInCOM.h and used in a few plugin related headers -->
			<pattern>
				<pattern>/\bHRESULT\b/</pattern>
				<replacement>SInt32</replacement>
			</pattern>
			<pattern>
				<pattern>/\bULONG\b/</pattern>
				<replacement>UInt32</replacement>
			</pattern>
			<pattern>
				<pattern>/\bLPVOID\b/</pattern>
				<replacement>pointer</replacement>
			</pattern>
			<pattern>
				<pattern>/\bREFIID\b/</pattern>
				<replacement>CFUUIDBytes</replacement>
			</pattern>
			<pattern>
				<pattern>/\bSTDMETHODCALLTYPE\b/</pattern>
				<replacement></replacement>
			</pattern>
		</replacement_patterns>
		
		<!-- uses which all Mac units should have -->
		<uses>
			AEDataModel, IconsCore,
			CFBase, CFArray, CFBag , CFCharacterSet, CFData, CFDate, CFDictionary, CFNumber ,CFPropertyList, CFSet, CFString, CFStringEncodingExt, CFTimeZone, CFTree, CFURL, CFXMLNode, CFXMLParser, CFMachPort, CFMessagePort, CFRunLoop, CFSocket, CFBinaryHeap, CFBitVector, CFBundle, CFByteOrders, CFPlugIn, CFPreferences, CFURLAccess, CFUUID, CFLocale, CFStream, CFDateFormatter, CFNumberFormatter, CFCalendar, CFUserNotification, CFNotificationCenter, CFAttributedString, CFNetworkErrorss,
			CGBase, CGAffineTransforms, CGBitmapContext, CGColor, CGColorSpace, CGContext, CGDataConsumer, CGDataProvider, CGDirectDisplay, CGDirectPalette, CGDisplayConfiguration, CGDisplayFades, CGErrors, CGEvent, CGEventSource, CGEventTypes, CGFont, CGFunction, CGGLContext, CGGeometry, CGImage, CGLayer, CGPDFArray, CGPDFContentStream, CGPDFContext, CGPDFDictionary, CGPDFDocument, CGPDFObject, CGPDFOperatorTable, CGPDFPage, CGPDFScanner, CGPDFStream, CGPDFString, CGPSConverter, CGPath, CGPattern, CGRemoteOperation, CGSession, CGShading, CGWindowLevels,
			CVBase,CVImageBuffer,
			IOSurfaceAPI,
			SecBase, SecTrust,
			MacTypes, MacOSXPosix,
			macgl, CGLTypes,
		</uses>
		
	</framework>
	
	<framework>
		<parent>carbon_base</parent>
		<name>cocoa_base</name>
		<static>1</static>
		
		<!-- MOVE THESE TO ANOTHER STATIC FRAMEWORK AS THEY ARE LOW LEVEL -->
		<external_macros>%%ABBRV_NAME%%_EXTERN, %%UC_NAME%%_EXTERN, %%UC_NAME%%_PRIVATE_EXTERN, %%UC_NAME%%_EXPORT, %%ABBRV_NAME%%_EXPORT, %%UC_NAME%%_IMPORT, %%ABBRV_NAME%%_IMPORT</external_macros>
		<inline_macros>%%ABBRV_NAME%%_INLINE, NS_INLINE</inline_macros>
		<ignore_types>
			%%ABBRV_NAME%%_EXTERN, %%UC_NAME%%_EXTERN, %%UC_NAME%%_CLASS_AVAILABLE, %%ABBRV_NAME%%_CLASS_AVAILABLE, %%UC_NAME%%_EXPORT, %%ABBRV_NAME%%_EXPORT, %%UC_NAME%%_IMPORT, %%ABBRV_NAME%%_IMPORT, 
			%%ABBRV_NAME%%_AVAILABLE_STARTING, %%ABBRV_NAME%%_AVAILABLE_BUT_DEPRECATED, %%UC_NAME%%_AVAILABLE_STARTING, %%UC_NAME%%_AVAILABLE_BUT_DEPRECATED,
			__AVAILABILITY_INTERNAL_DEPRECATED, __AVAILABILITY_INTERNAL_UNAVAILABLE, __AVAILABILITY_INTERNAL_WEAK_IMPORT, __AVAILABILITY_INTERNAL_REGULAR,
			</ignore_types>
		<remove_macros>
			<value>/\s*(NS_CLASS_AVAILABLE|NS_FORMAT_FUNCTION)\s*\(.*?\)\s*/i</value>
			<value>/(NS_REQUIRES_NIL_TERMINATION|NS_AUTOMATED_REFCOUNT_UNAVAILABLE|NS_UNAVAILABLE|NS_RETURNS_RETAINED|NS_RETURNS_NOT_RETAINED|NS_RETURNS_INNER_POINTER|NS_AUTOMATED_REFCOUNT_WEAK_UNAVAILABLE|NS_REQUIRES_PROPERTY_DEFINITIONS|NS_REPLACES_RECEIVER|NS_RELEASES_ARGUMENT|NS_VALID_UNTIL_END_OF_SCOPE|NS_ROOT_CLASS)/i</value>
			<value>/%%PREGEX_NAMES%%_CLASS_AVAILABLE\s*\(.*\)/i</value>
			<value>/%%PREGEX_NAMES%%_EXTERN_C_(BEGIN|END)/i</value>
			<value>/\bAVAILABLE_\w+_VERSION_\d+_\d+_AND_LATER\b/i</value>
		</remove_macros>
		
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>Foundation</name>
		<ignore_types>
			FOUNDATION_EXTERN, FOUNDATION_EXTERN, FOUNDATION_IMPORT, FOUNDATION_EXPORT, FOUNDATION_STATIC_INLINE, FOUNDATION_EXTERN_INLINE, 
			YES, NO, NS_VOIDRETURN, NS_INLINE, NS_NONATOMIC_IPHONEONLY, NS_BLOCKS_AVAILABLE, NSINTEGER_DEFINED, 
			NSURLResponseUnknownLength, NSNotAnIntMapKey, NSNotAnIntegerMapKey, NSNotAPointerMapKey,
			NS_NONATOMIC_IOSONLY, NS_AUTOMATED_REFCOUNT_UNAVAILABLE, NS_UNAVAILABLE, AVAILABLE_MAC_OS_X_VERSION_NA_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_NA,
		</ignore_types>
		<inline_macros>FOUNDATION_STATIC_INLINE, FOUNDATION_EXTERN_INLINE</inline_macros>		
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>AppKit</name>
		<ignore_types>_NSWINDOWS_DLL_GOOP</ignore_types>
		<ignore_headers>AppKitDefines.h</ignore_headers>
		<uses>CoreImage</uses>
	</framework>

	<framework>
		<parent>Foundation</parent>
		<name>QuartzCore</name>
		<external_macros>CA_EXTERN</external_macros>
		<inline_macros>CA_INLINE</inline_macros>
		<ignore_types>
			CA_EXTERN_C_BEGIN, CA_EXTERN, CA_INLINE, CA_HIDDEN, CA_WARN_DEPRECATED
		</ignore_types>
		<remove_macros>
			<value>/CA_EXTERN_C_(BEGIN|END)/</value>
			<value>/CA_DEPRECATED/</value>
		</remove_macros>
		<support_frameworks>Foundation, CoreImage</support_frameworks>
	</framework>
			
	<framework>
		<!-- ??? we need to separate all the macros in cocoa_base to another framework -->
		<parent>cocoa_base</parent>
		<name>CoreFoundation</name>
		<remove_macros>
			<value>/CF_FORMAT_FUNCTION\s*\(.*?\)/</value>
			<value>/CF_FORMAT_ARGUMENT\s*\(.*?\)/</value>
		</remove_macros>
		<ignore_types>
			__COREFOUNDATION_CFBASE__, __WIN32__, __WIN64__, __LLP64__, __LITTLE_ENDIAN__,
			__IPHONE_5_0, __IPHONE_6_0
		</ignore_types>
	</framework>
	
	<framework>
		<parent>CoreFoundation</parent>
		<name>CFNetwork</name>
		<remove_macros>
			<value>/__OSX_STREAM_PROPERTIES_DEPRECATED_\d+_\d+/</value>
		</remove_macros>
	</framework>
	
	<framework>
		<parent>CoreFoundation</parent>
		<name>CoreGraphics</name>
		<ignore_headers>CGBase.h</ignore_headers>
	</framework>
	
	<framework>
		<parent>Foundation</parent>
		<name>CoreImage</name>
		<support_frameworks>Foundation</support_frameworks>
		<minimum_sdk_version>5.0</minimum_sdk_version>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>ios</name>
		<static>1</static>
		<external_macros>%%UC_NAME%%_EXTERN_CLASS</external_macros>
		<ignore_types>%%UC_NAME%%_CLASS_AVAILABLE</ignore_types>
		<remove_macros>
			<!-- pesky macros to prevent reloading headers we don't want to redefine in pascal -->
			<value>/#\s*if\s*!defined\(__\w+_H__\)/i</value>
			<value>/#\s*if[n]*def\s*__\w+_H__/i</value>
			<value>/#\s*define\s*__\w+_H__\s+\d+/i</value>
		</remove_macros>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>UIKit</name>
		<external_macros>UIKIT_EXTERN</external_macros>
		<inline_macros>UIKIT_STATIC_INLINE</inline_macros>			
		<ignore_types>UIKIT_EXTERN, UIKIT_STATIC_INLINE</ignore_types>
		<remove_macros>
			<value>/(UIKIT_EXTERN_CLASS|UI_APPEARANCE_SELECTOR|UITOUCH_IVARS_PRIVATE)/i</value>
			<value>/UIKIT_CLASS_AVAILABLE\s*\(.*\)/i</value>
		</remove_macros>
		<implicit_pointers>CIColor, CIImage</implicit_pointers>
		<support_frameworks>Foundation</support_frameworks>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>CoreVideo</name>
		<ignore_types>COREVIDEO_SUPPORTS_DIRECT3D, CV_INLINE, snprintf</ignore_types>
	</framework>
		
	<framework>
		<parent>ios</parent>
		<name>AddressBook</name>
		<ignore_headers>ABGlobalsC.h, ABAddressBookC.h</ignore_headers>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>AddressBookUI</name>
		<support_frameworks>Foundation</support_frameworks>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>EventKit</name>
		<support_frameworks>Foundation</support_frameworks>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>ExternalAccessory</name>
		<support_frameworks>Foundation</support_frameworks>
	</framework>
		
	<framework>
		<parent>ios</parent>
		<name>GameKit</name>
		<external_macros>GK_EXTERN_WEAK</external_macros>
		<ignore_types>GK_EXTERN_WEAK</ignore_types>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>CoreLocation</name>
		<ignore_types>__MAC_TBD</ignore_types>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>MessageUI</name>
		<support_frameworks>Foundation</support_frameworks>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>EventKitUI</name>
		<support_frameworks>Foundation, EventKit</support_frameworks>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>AudioUnit</name>
		<support_frameworks>CoreMIDI</support_frameworks>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>AudioToolbox</name>
		<remove_macros>
			<value>/ATTRIBUTE_PACKED/</value>
		</remove_macros>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>CoreAudio</name>
		<imports>CoreAudioTypes.h</imports>
	</framework>
	
	<framework>
		<parent>ios</parent>
		<name>OpenGLES</name>
		<imports>EAGL.h, EAGLDrawable.h, /ES1/gl.h, /ES1/glext.h</imports>
		<remove_macros>
			<value>/GL_APIENTRY/i</value>
		</remove_macros>
		<external_macros>GL_API</external_macros>
	</framework>
	
	<!--
	<framework>
		<parent>cocoa_base</parent>
		<name>OpenGL</name>
		// we need to make this option so we can get all headers
		<import_all_headers>1</import_all_headers>
	</framework>
	-->
	
	<framework>
		<parent>cocoa_base</parent>
		<name>WebKit</name>
		<remove_macros>
			<value>/\s*WEBKIT_OBJC_METHOD_ANNOTATION\([^;]*\)\s*/i</value>
			<value>/AVAILABLE_IN_WEBKIT_VERSION_\d+_\d+/</value>
			<value>/AVAILABLE_AFTER_WEBKIT_VERSION_\d+_\d+/i</value>
			<value>/AVAILABLE_WEBKIT_VERSION_\d+_\d+_AND_LATER_BUT_DEPRECATED_AFTER_WEBKIT_VERSION_\d+_\d+/i</value>
		</remove_macros>
		<support_frameworks>AppKit</support_frameworks>
	</framework>
		
	<framework>
		<parent>cocoa_base</parent>
		<name>QuickLook</name>
		<external_macros>QL_EXPORT</external_macros>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>QuickLookUI</name>
		<external_macros>QL_EXPORT</external_macros>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>IOKit</name>
		<imports>/hidsystem/IOLLEvent.h</imports>
	</framework>
	
	<framework>
		<parent>carbon_base</parent>
		<name>CarbonCore</name>
		<ignore_headers>ConditionalMacros.h</ignore_headers>
	</framework>
	
	<framework>
		<parent>carbon_base</parent>
		<name>CoreMediaIO</name>
		<imports>CMIOHardware.h, CMIOHardwareControl.h, CMIOHardwareDevice.h, CMIOHardwareObject.h, CMIOHardwarePlugIn.h, CMIOHardwareStream.h, CMIOHardwareSystem.h, CMIOSampleBuffer.h</imports>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>CalendarStore</name>
		<support_frameworks>Foundation</support_frameworks>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>PDFKit</name>
		<support_frameworks>Foundation</support_frameworks>
	</framework>
		
	<framework>
		<parent>cocoa_base</parent>
		<name>QTKit</name>
		<uses>Movies</uses>
		<support_frameworks>Foundation, AppKit</support_frameworks>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>OSAKit</name>
		<support_frameworks>Foundation, AppKit</support_frameworks>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>Automator</name>
		<remove_macros>
			<value>/\bAM_UNUSED_FOR_ANALYZER\b/</value>
		</remove_macros>
		<support_frameworks>AppKit</support_frameworks>
	</framework>

	<framework>
		<parent>cocoa_base</parent>
		<name>ServerNotification</name>
		<imports>NSServerNotificationCenter.h</imports>
	</framework>

	<framework>
		<parent>cocoa_base</parent>
		<name>SecurityFoundation</name>
		<imports>SFAuthorization.h</imports>
		<uses>Authorization</uses>
	</framework>

	<framework>
		<parent>cocoa_base</parent>
		<name>SecurityInterface</name>
		<imports>SFAuthorizationPluginView.h, SFCertificateView.h, SFAuthorizationView.h, SFChooseIdentityPanel.h, SFCertificatePanel.h, SFKeychainSavePanel.h, SFCertificateTrustPanel.h, SFKeychainSettingsPanel.h</imports>
		<uses>Authorization, AuthorizationPlugin</uses>
		<support_frameworks>Foundation</support_frameworks>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>Message</name>
		<imports>NSMailDelivery.h</imports>
	</framework>

	<framework>
		<parent>cocoa_base</parent>
		<name>InstantMessage</name>
		<imports>IMAVControl.h, IMAVManager.h, IMService.h</imports>
	</framework>

	<framework>
		<parent>carbon_base</parent>
		<name>OpenGL</name>
		<imports>
			CGLContext.h, CGLCurrent.h, CGLDevice.h, CGLIOSurface.h, CGLMacro.h, CGLProfiler.h, CGLProfilerFunctionEnum.h, CGLRenderers.h, CGLTypes.h,
			gl.h, gl3.h, gl3ext.h, glext.h, gliContext.h, gliDispatch.h, gltypes.h, glu.h, gluContext.h, gluMacro.h
		</imports>
	</framework>
			
	<framework>
		<parent>carbon_base</parent>
		<name>CFOpenDirectory</name>
		<uses>CFError</uses>
		<support_frameworks>Foundation</support_frameworks>
		<external_macros>CF_EXPORT</external_macros>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>CoreAudioKit</name>
		<support_frameworks>AppKit</support_frameworks>
		<uses>Components</uses>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>DiscRecording</name>
		<uses>Files</uses>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>DiscRecordingUI</name>
		<support_frameworks>Foundation, AppKit</support_frameworks>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>ImageKit</name>
		<support_frameworks>CoreImage</support_frameworks>
	</framework>
		
	<framework>
		<parent>cocoa_base</parent>
		<name>InputMethodKit</name>
		<support_frameworks>AppKit</support_frameworks>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>InstallerPlugins</name>
		<support_frameworks>AppKit</support_frameworks>
	</framework>
	
	<framework>
		<parent>cocoa_base</parent>
		<name>PreferencePanes</name>
		<support_frameworks>Foundation, AppKit</support_frameworks>
	</framework>

	<framework>
		<parent>cocoa_base</parent>
		<name>QuartzFilters</name>
		<support_frameworks>Foundation, AppKit</support_frameworks>
	</framework>

	<framework>
		<parent>cocoa_base</parent>
		<name>ScriptingBridge</name>
		<uses>LSOpen</uses>
	</framework>
				
</frameworks>